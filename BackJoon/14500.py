"""
1. 테트로미노로 만들 수 있는 모든 모양을 좌표로 나타낸 tetris 리스트 배열
2. 모든 좌표에서 tertris에 있는 좌표가 범위를 넘지 않는다면 
   answer에 해당 좌표 값을 더한 값을 저장
"""

import sys
inpurt = sys.stdin.readline

def polyomino(x, y):
  for case in tetris:
    num = 0
    for i in range(4):
      dx = x + case[i][0]
      dy = y + case[i][1]

      if 0 <= dx < n and 0 <= dy < m:
        num += graph[dx][dy]
      else:
        num = 0
        break

    if num != 0:
      answer.append(num)

n, m = map(int, input().split())
answer = []

graph = []
for _ in range(n):
  graph.append(list(map(int, input().split())))

tetris=[[(0,0),(0,1),(1,0),(1,1)],
        [(0,0),(0,1),(0,2),(0,3)],
        [(0,0),(1,0),(2,0),(3,0)],
        [(0,0),(1,0),(0,1),(1,1)],
        [(0,0),(1,0),(2,0),(2,1)],
        [(0,1),(1,1),(2,1),(2,0)],
        [(0,0),(0,1),(1,1),(2,1)],
        [(0,0),(0,1),(1,0),(2,0)],
        [(0,0),(1,0),(1,1),(1,2)],
        [(0,2),(1,1),(1,2),(1,0)],
        [(0,0),(0,1),(0,2),(1,2)],
        [(0,0),(1,0),(0,1),(0,2)],
        [(0,0),(1,0),(1,1),(2,1)],
        [(0,1),(1,1),(1,0),(2,0)],
        [(1,0),(1,1),(0,1),(0,2)],
        [(0,0),(0,1),(1,1),(1,2)],
        [(0,1),(1,0),(1,1),(1,2)],
        [(0,0),(0,1),(0,2),(1,1)],
        [(0,0),(1,0),(1,1),(2,0)],
        [(0,1),(1,1),(1,0),(2,1)]]

for i in range(n):
  for j in range(m):
    polyomino(i, j)

print(max(answer))